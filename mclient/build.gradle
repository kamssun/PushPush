import com.android.build.gradle.tasks.PackageApplication

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}
apply plugin: 'android'

def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

repositories {
    maven { url localMavenRepo }
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 2
        versionName "2.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        mclientConfig {
            storeFile file("android.keystore")
            storePassword "newthread"
            keyAlias "android.keystore"
            keyPassword "newthread"
        }
    }


    sourceSets {
        main {
            assets.srcDirs = ['assets']
        }
        instrumentTest.setRoot('tests')
    }
    buildTypes {
        debug {
            runProguard false
            signingConfig signingConfigs.mclientConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        release {
            runProguard false
            signingConfig signingConfigs.mclientConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
    }

}

dependencies {
    // You must install or update the Google Repository through the SDK manager to use this dependency.
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:19.1.0'
    compile project(':library_actionbarSherlock')
    compile project(':library_animation')
    compile project(':library_pullToRefresh')
    compile project(':library_pullToRefresh_extra')
    compile project(':library_sldingUpPanel')
    compile project(':library_slidingMenu')
    compile project(':library_stickyListHeaders')
    compile project(':library_swipeListView')
}

task copyNativeLibs(type: Copy) {
    from fileTree(dir: 'libs', include: '**/*.so') into 'build/native-libs'
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet()
    pkgTask.jniFolders.add(new File(projectDir, 'build/native-libs'))
}

